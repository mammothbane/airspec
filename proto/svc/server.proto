syntax = "proto3";

package airspecs.server;

import "bluetooth/packet.proto";
import "svc/meta.proto";

message SamplesAck {
    repeated uint64 msg = 1;
}

message DumpRequest {
    RequestMetadata metadata = 1;

    oneof what {
        string user = 2;
        string specs_id = 3;
    }
}

message CSV {
    string csv = 1;
}

message RawSample {
    RequestMetadata metadata = 1;
    bytes unparsed_bytes = 2;
}

message RawSampleResponse {
    enum RawSampleStatus {
        OK = 0;
        ERR = 2;
    }

    RawSampleStatus status = 1;
}

message Point {
    message Value {
        oneof value {
            float float = 1;
            string string = 2;
            int64 int = 3;
            uint64 uint = 4;
            bool bool = 5;
        }
    }

    string measurement = 1;
    map<string, string> tags = 2;
    map<string, Value> fields = 3;
    optional int64 timestamp = 4;
}

message SubmitPoint {
    RequestMetadata meta = 1;

    Point value = 2;
}


service Backend {
    rpc SubmitRawSamples (stream RawSample) returns (RawSampleResponse);
    rpc SubmitSamples(stream bluetooth.SensorPacket) returns (stream SamplesAck);
    rpc SubmitPoints(stream SubmitPoint) returns (stream SamplesAck);
    rpc Dump(DumpRequest) returns (CSV);
}
