syntax = "proto3";

package airspecs.svc.ingest;

import "bluetooth/packet.proto";

message RawSample {
    bytes unparsed_bytes = 1;
    uint32 specs = 2;
    optional string user = 3;
}

message RawSampleResponse {
    enum RawSampleStatus {
        OK = 0;
        ERR = 2;
    }

    RawSampleStatus status = 1;
}

message Point {
    message Value {
        oneof value {
            float float = 1;
            string string = 2;
            int64 int = 3;
            uint64 uint = 4;
            bool bool = 5;
        }
    }

    string measurement = 1;
    map<string, string> tags = 2;
    map<string, Value> fields = 3;
    optional int64 timestamp = 4;
}

message SamplesAck {
    repeated uint64 msg = 1;
}

service Ingest {
    rpc SubmitRawSamples (stream RawSample) returns (RawSampleResponse);
    rpc SubmitSamples(stream bluetooth.SensorPacket) returns (stream SamplesAck);
    rpc SubmitPoints(stream Point) returns (stream SamplesAck);
}
